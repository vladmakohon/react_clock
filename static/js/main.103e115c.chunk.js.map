{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedCurrentDate","Date","toUTCString","slice","Clock","state","today","todayUpdateTimerId","this","window","setInterval","setState","prevProps","prevState","props","name","console","debug","info","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","clockName","nameUpdateTimerId","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAGA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAUvC,IAAMC,EAAb,4MACEC,MAAe,CACbC,MAAON,KAFX,EAKEO,mBAAqB,EALvB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,mBAAqBE,OAAOC,aAAY,WAC3C,EAAKC,SAAS,CAAEL,MAAON,QACtB,OAVP,gCAaE,SAAmBY,EAAkBC,GAC/BL,KAAKM,MAAMC,OAASH,EAAUG,MAChCC,QAAQC,MAAR,uBAA8BL,EAAUG,KAAxC,eAAmDP,KAAKM,MAAMC,OAG5DP,KAAKH,MAAMC,QAAUO,EAAUP,OACjCU,QAAQE,KAAKV,KAAKH,MAAMC,SAnB9B,kCAuBE,WACEG,OAAOU,cAAcX,KAAKD,sBAxB9B,oBA2BE,WACE,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKM,MAAMC,OAGb,YAED,sBAAMK,UAAU,cAAhB,SACGZ,KAAKH,MAAMC,eArCtB,GAA2Be,IAAMC,eCVjC,SAASC,IACP,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GASX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAU,EACVC,UAAW,WAHf,EAMEC,kBAAoB,EANtB,EAwBEC,iBAAmB,SAACC,GAClBA,EAAMC,iBAEF,EAAK5B,MAAMuB,UACb,EAAKjB,SAAS,CAAEiB,UAAU,KA5BhC,EAgCEM,gBAAkB,SAACF,GACjBA,EAAMC,iBAED,EAAK5B,MAAMuB,UACd,EAAKjB,SAAS,CAAEiB,UAAU,KApChC,uDAQE,WAA2B,IAAD,OACxBO,SAASC,iBAAiB,cAAe5B,KAAKuB,kBAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,iBAExC1B,KAAKsB,kBAAoBrB,OAAOC,aAAY,WAC1C,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,QAdP,kCAiBE,WACEY,SAASE,oBAAoB,cAAe7B,KAAKuB,kBACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,iBAE3CzB,OAAOU,cAAcX,KAAKsB,qBArB9B,oBAwCE,WACE,MAAgCtB,KAAKH,MAA7BuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOb,KAAMc,WAhDvB,GAAyBR,IAAMC,eCb/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.103e115c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\nfunction getFormattedCurrentDate(): string {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\ntype Props = {\n  name: string,\n};\ntype State = {\n  today: string,\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    today: getFormattedCurrentDate(),\n  };\n\n  todayUpdateTimerId = 0;\n\n  componentDidMount(): void {\n    this.todayUpdateTimerId = window.setInterval(() => {\n      this.setState({ today: getFormattedCurrentDate() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State): void {\n    if (this.props.name !== prevProps.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n\n    if (this.state.today !== prevState.today) {\n      console.info(this.state.today);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.todayUpdateTimerId);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.PureComponent<Props, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameUpdateTimerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.nameUpdateTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n\n    window.clearInterval(this.nameUpdateTimerId);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (this.state.hasClock) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  handleLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render(): React.ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}